import asyncio
from telethon import TelegramClient, events

# –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ (—á—Ç–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π)
API_ID_2 = 28670148
API_HASH_2 = '77b2ee6f754921e6db7cc3f995e3da56'
PHONE_NUMBER_2 = '+380633890119'

# –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ (–æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ @CryptoBot)
API_ID_1 = 29927044  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ API ID –≤—Ç–æ—Ä–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
API_HASH_1 = 'a5bec5dba2cea639c9924b496f568486'
PHONE_NUMBER_1 = '+380631155275'  # –ù–æ–º–µ—Ä –≤—Ç–æ—Ä–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞

# ID —á–∞—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å
CHAT_ID_TO_MONITOR = -1001997427373  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—ã–π ID

# –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç—ã –¥–ª—è –æ–±–æ–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
client_reader = TelegramClient('reader_session', API_ID_1, API_HASH_1)
client_sender = TelegramClient('sender_session', API_ID_2, API_HASH_2)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º "–ü–æ–ª—É—á–∏—Ç—å"
async def monitor_button(event):
    message = event.message

    if not message.buttons and 'üïí' not in message.message:
        print("–ù–µ—Ç –∫–Ω–æ–ø–æ–∫ –∏ –Ω–µ—Ç —Å–º–∞–π–ª–∏–∫–∞ üïí –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏.")
        return

    max_checks = 200
    check_count = 0

    while check_count < max_checks:
        message = await client_reader.get_messages(message.chat_id, ids=message.id)

        if 'üïí' in message.message:
            print("–°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–º–∞–π–ª–∏–∫ üïí, –æ–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏...")

        if message.buttons:
            for row in message.buttons:
                for button in row:
                    if "–ü–æ–ª—É—á–µ–Ω–æ" in button.text:
                        print("–°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.")
                        return

                    elif "–ü–æ–ª—É—á–∏—Ç—å" in button.text:
                        print(f"–ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º '{button.text}'. –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Å—ã–ª–∫—É...")

                        if button.url:
                            code = button.url.split("start=")[-1]
                            print(f"–ü–æ–ª—É—á–µ–Ω –∫–æ–¥: {code}")

                            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –≤–æ –≤—Ç–æ—Ä–æ–º –∫–ª–∏–µ–Ω—Ç–µ
                            await client_sender.send_message('@CryptoBot', f'/start {code}')
                            print("–ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ @CryptoBot —Å–æ –≤—Ç–æ—Ä–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.")
                        else:
                            print("–°—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
                        return
                    elif "..." in button.text:
                        print("–ö–Ω–æ–ø–∫–∞ –µ—â—ë —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è, –∂–¥—ë–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...")
                    else:
                        print(f"–ö–Ω–æ–ø–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º '{button.text}' –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–π.")

        check_count += 1
        await asyncio.sleep(0.01)

    if check_count >= max_checks:
        print("–î–æ—Å—Ç–∏–≥–Ω—É—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä–æ–∫, –∑–∞–≤–µ—Ä—à–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.")

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ–±–æ–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
async def main():
    await client_reader.start(phone=PHONE_NUMBER_1)
    await client_sender.start(phone=PHONE_NUMBER_2)
    print("–û–±–∞ –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã –∫ Telegram.")

    @client_reader.on(events.NewMessage(chats=CHAT_ID_TO_MONITOR))
    async def monitor_messages(event):
        message_text = event.message.message
        print(f"–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message_text}")

        await monitor_button(event)

    await client_reader.run_until_disconnected()
    await client_sender.run_until_disconnected()

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤
asyncio.run(main())
